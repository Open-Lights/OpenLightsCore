on: [push, pull_request, workflow_dispatch]

name: CI

env:
  RUSTFLAGS: -A unused -D warnings --cfg=web_sys_unstable_apis
  RUSTDOCFLAGS: -D warnings

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libasound2-dev libudev-dev libdbus-1-dev pkg-config
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libasound2-dev libudev-dev libdbus-1-dev pkg-config
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libasound2-dev libudev-dev libdbus-1-dev pkg-config
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -A unused -D warnings

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: arm-unknown-linux-musleabihf
          - os: ubuntu-latest
            TARGET: armv7-unknown-linux-musleabihf
          - os: ubuntu-latest
            TARGET: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            TARGET: armv7-unknown-linux-musleabihf
          - os: ubuntu-latest
            TARGET: x86_64-unknown-linux-gnu

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install libraries
        run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libasound2-dev libudev-dev libdbus-1-dev pkg-config

      - name: Fix PKG_CONFIG_PATH
        run: export "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          target: ${{ matrix.TARGET }}
          override: true

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          env-vars: "CARGO CC CFLAGS CXX CMAKE RUST"
          workspaces: ". -> target"
          cache-targets: "true"
          cache-on-failure: "false"
          cache-all-crates: "false"
          save-if: "true"
          cache-provider: "github"

      - name: Build project
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target=${{ matrix.TARGET }}

      - name: Rename build output
        run: cp target/${{ matrix.TARGET }}/release/open_lights_core${{ matrix.EXTENSION }} open_lights_core-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: open_lights_core-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
          path: open_lights_core-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: ${{ github.event_name == 'push' }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: open_lights_core-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
          asset_name: open_lights_core-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
          tag: ${{ github.ref }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
          overwrite: true
